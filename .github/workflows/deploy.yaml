name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8



    - name: Test Python syntax
      run: |
        python -m py_compile DockerManagementCLI.py

    - name: Test script import
      run: |
        python -c "
        import sys
        sys.path.append('.')
        try:
            exec(open('DockerManagementCLI.py').read())
            print('✅ Script loads successfully')
        except SystemExit:
            print('✅ Script exits gracefully')
        except Exception as e:
            print(f'❌ Script error: {e}')
            sys.exit(1)
        "

  docker-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Test with Docker available
      run: |
        docker --version
        python -c "
        import subprocess
        import sys
        
        # Test Docker detection
        try:
            result = subprocess.run(['docker', '--version'], 
                                  capture_output=True, text=True)
            if result.returncode == 0:
                print('✅ Docker is available')
            else:
                print('❌ Docker not available')
                sys.exit(1)
        except Exception as e:
            print(f'❌ Docker test failed: {e}')
            sys.exit(1)
        "

    - name: Test script with Docker
      run: |
        timeout 10s python DockerManagementCLI.py <<EOF || echo "✅ Script completed"
        4
        EOF